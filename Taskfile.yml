# SPDX-License-Identifier: Apache-2.0
version: '3'
dotenv: ['.env', '{{.ENV}}/.env', '{{.HOME}}/.env']

includes:
  server: ./server/Taskfile.server.yml
  models: ./config/Taskfile.models.yml
  
tasks:
  install:
    desc: Install development dependencies
    cmds:
      - task: clean
      - uv venv
      - uv pip install --upgrade pip
      - uv sync
      - uv pip install -e "lib[test]"
      - uv pip install -e "server[test]"

  watch:
    desc: Watch the server for changes
    cmds:
      - docker compose -f ./config/docker-compose.yml up  --watch

  build:
    desc: Build the server
    cmds:
      - docker compose -f ./config/docker-compose.yml build

  dev:server:
    desc: Run the server in development mode with Docker

    cmds:
      - docker compose -f ./config/docker-compose.yml down
      - docker compose -f ./config/docker-compose.yml up --build --watch

  dev:studio:
    desc: Run the studio in development mode with Docker
    cmds:
      - docker compose -f ./config/docker-compose.yml down
      - docker compose -f ./config/docker-compose.yml up gcap_ui --build --watch

  test:
    desc: Run all tests
    cmds:
      - pytest tests/ -v -m "not integration"

  test:server:
    desc: Run server tests
    cmds:
      - cd server && pytest tests/server_tests -v -m "server"

  lint:
    desc: Run Ruff linter on all Python files
    cmds:
      - ruff check 

  format:
    desc: Run Ruff formatter on all Python files
    cmds:
      - ruff format 

  check:all:
    desc: Run both linter and formatter in check mode
    cmds:
      - ruff check 
      - ruff format --check 

  fix:all:
    desc: Run both linter and formatter with fixes
    cmds:
      - ruff check --fix 
      - ruff format 

  clean:
    desc: Clean up development artifacts
    cmds:
      - cmd: rm -rf .venv
        platforms: [linux, darwin]
      - cmd: powershell -Command "if (Test-Path .venv) { Remove-Item -Recurse -Force .venv }"
        platforms: [windows]
        ignore_error: true
      - cmd: rm -rf server/.venv
        platforms: [linux, darwin]
      - cmd: powershell -Command "if (Test-Path server/.venv) { Remove-Item -Recurse -Force server/.venv }"
        platforms: [windows]
        ignore_error: true
      - cmd: find . -type d -name "__pycache__" -exec rm -rf {} +
        platforms: [linux, darwin]
      - cmd: powershell -Command "Get-ChildItem -Path . -Filter '__pycache__' -Recurse -Directory | Remove-Item -Recurse -Force"
        platforms: [windows]
        ignore_error: true
      - cmd: find . -name "*.pyc" -delete
        platforms: [linux, darwin]
      - cmd: powershell -Command "Get-ChildItem -Path . -Filter '*.pyc' -Recurse -File | Remove-Item -Force"
        platforms: [windows]
        ignore_error: true

  stop:
    desc: Stop all services
    cmds:
      - docker compose -f ./config/docker-compose.yml down

  clean-containers:
    desc: Stop all services
    cmds:
      - docker compose -f ./config/docker-compose.yml down --remove-orphans
