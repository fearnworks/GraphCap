# SPDX-License-Identifier: Apache-2.0
"""Type definitions for Hugging Face assets."""

from typing import List

import dagster as dg
from pydantic import BaseModel, Field


class DatasetMetadata(BaseModel):
    """Type definition for dataset metadata."""

    dataset_name: str = Field("graphcap_dataset", description="Name of the dataset")
    dataset_description: str = Field("A dataset generated by graphcap.", description="Description of the dataset")
    dataset_tags: List[str] = Field(
        default_factory=lambda: ["image-captioning", "computer-vision"], description="Tags for the dataset"
    )


class DatasetExportManifestMetadata(BaseModel):
    """Type definition for dataset export manifest metadata."""

    export_dir: str
    manifest_path: str


class HfUploadManifestMetadata(BaseModel):
    """Type definition for Hugging Face upload manifest metadata."""

    dataset_name: str
    namespace: str
    dataset_url: str


class HfUploadManifestConfig(dg.ConfigurableResource):
    """Configuration schema for the huggingface_upload_manifest asset."""

    dataset_name: str = Field(description="Name of the dataset")
    namespace: str = Field(description="Hugging Face Hub namespace (user or organization)")
    dataset_description: str = Field(description="Description of the dataset")
    dataset_tags: List[str] = Field(default_factory=list, description="Tags for the dataset")
    include_images: bool = Field(True, description="Whether to include images in the dataset")
    use_hf_urls: bool = Field(False, description="Whether to use Hugging Face URLs")
    private_dataset: bool = Field(False, description="Whether the dataset should be private")
