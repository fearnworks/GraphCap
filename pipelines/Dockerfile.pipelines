# Use the official Python base image with Debian Slim
FROM python:3.11-slim-bookworm AS base

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        build-essential \
        git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Create venv in a standard location
ENV VIRTUAL_ENV=/opt/venv
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Copy pyproject.toml files first
COPY pyproject.toml /app/pipelines/pyproject.toml

# Install dependencies using uv
RUN uv pip install --upgrade pip && \
    cd /app/pipelines && \
    uv pip install -r ./pyproject.toml


# Copy configuration and application code
COPY ./dagster.example.yml /app/pipelines/.dagster/dagster.yml
COPY . /app/pipelines

# Make entrypoint script executable
COPY ./_scripts/pipeline_entrypoint.sh /app/pipelines/_scripts/pipeline_entrypoint.sh
RUN chmod +x /app/pipelines/_scripts/pipeline_entrypoint.sh


# Expose the port on which the Dagster development server listens
EXPOSE 11000

# Set the entrypoint command
ENTRYPOINT ["/bin/bash", "/app/pipelines/_scripts/pipeline_entrypoint.sh"]